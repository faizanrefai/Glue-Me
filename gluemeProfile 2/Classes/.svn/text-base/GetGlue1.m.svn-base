//
//  GetGlue1.m
//  glueme
//
//  Created by apple on 10/25/11.
//  Copyright 2011 354456. All rights reserved.
//

#import "GetGlue1.h"


@implementation GetGlue1
@synthesize mysegment,searchbar,phoneArray2,Name;

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

- (void)dealloc
{
    [super dealloc];
}

- (void)didReceiveMemoryWarning
{
    // Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
    
    // Release any cached data, images, etc that aren't in use.
}

#pragma mark - View lifecycle

- (void)viewDidLoad
{
    [super viewDidLoad];
    self.navigationController.navigationBar.alpha = 0.0;
    appDelegateObj = (gluemeAppDelegate *)[[UIApplication sharedApplication]delegate];
    
    self.navigationController.navigationBar.tintColor = [UIColor clearColor];
    UIImageView *topbarImg = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, 320, 46)];
    [topbarImg setImage:[UIImage imageNamed:@"FirstTopBar.png"]];
    UIButton *BumpBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    BumpBtn.frame = CGRectMake(268,10, 35, 34);
    
    [BumpBtn addTarget:self action:@selector(Bump) forControlEvents:UIControlEventTouchUpInside];
    
    [self.view addSubview:BumpBtn]; 
    
    [self.view addSubview:topbarImg];
    [self.navigationController.navigationBar sendSubviewToBack:topbarImg];

    phnArray = [[NSMutableArray alloc] init];
    
    // Do any additional setup after loading the view from its nib.
}
-(void)Bump
{
    NSLog(@"BumpClicked");
    bumpObj = [[Bump alloc] initWithNibName:@"Bump" bundle:nil];
    [self.navigationController pushViewController:bumpObj animated:YES];
    
}

-(void)reloadMyTbl
{
    [phncontacttbl reloadData];
}


-(void)viewWillAppear:(BOOL)animated    {

    gluemecontacttbl.hidden = FALSE;
	phncontacttbl.hidden = TRUE;
    phoneArray2 = [[NSMutableArray alloc] init];
    [gluemecontacttbl setRowHeight:70.0];
    [phncontacttbl setRowHeight:70.0];
//
//    ABAddressBookRef addressBook = ABAddressBookCreate(); NSArray *thePeople = (NSArray *)ABAddressBookCopyArrayOfAllPeople(addressBook);
//    for (id person in thePeople)
//        
//    {
//        NSString *name = (NSString *)ABRecordCopyValue(person, kABPersonFirstNameProperty);
//        [phoneArray2 addObject:name];
//        NSLog(@"!!!!!! name ---> %@",name);
//    }
    Contname=[[NSMutableArray alloc]init];
    
    NSString *aName;
    
    ABAddressBookRef addressBook = ABAddressBookCreate(); NSArray *thePeople = (NSArray *)ABAddressBookCopyArrayOfAllPeople(addressBook);
    for (id person in thePeople)
        
    {
        //        NSString *name = (NSString *)ABRecordCopyValue(person, kABPersonFirstNameProperty);
        //        [Contname addObject:name];
        //        NSLog(@"!!!!!! name ---> %@",name);
        //    }
        CFStringRef cfName = ABRecordCopyCompositeName(person);
        if (cfName != nil)
        {
            aName = [NSString stringWithString:(NSString *)cfName];
            CFRelease(cfName);
            [Contname addObject:aName];
        }
        else
        {
            aName = @"No Name";
            [Contname addObject:aName];
            
        }
    }


    [phoneArray2 addObjectsFromArray:Contname];
    
    
    [phnArray addObjectsFromArray:phoneArray2];
    
    NSLog(@"%@",phnArray);
    
//    appDelegateObj.myobject = self;
//    appDelegateObj.mySelector = @selector(reloadMyTbl);
    
//    ABAddressBookRef addressbook = ABAddressBookCreate();
//    
//    CFArrayRef allPeople = ABAddressBookCopyArrayOfAllPeople(addressbook);
//    NSLog(@"%@",allPeople);
//    CFIndex numPeople = ABAddressBookGetPersonCount(addressbook);
//    //  NSLog(@"%@",numPeople);
//    for (int i=0; i < numPeople; i++) { 
//        ABRecordRef person = CFArrayGetValueAtIndex(allPeople, i);
//        ABMutableMultiValueRef phonelist = ABRecordCopyValue(person, kABPersonPhoneProperty);
//        
//        CFIndex numPhones = ABMultiValueGetCount(phonelist);
//        NSMutableArray *phoneNo;
//        phoneNo = [[NSMutableArray alloc] init];
//        for (int j=0; j < numPhones; j++) {
//            CFTypeRef ABphone = ABMultiValueCopyValueAtIndex(phonelist, j);
//            NSString *personPhone = (NSString *)ABphone;
//            NSLog(@"%@",personPhone);
//            CFRelease(ABphone);
//            [phoneNo addObject:personPhone];
//            NSLog(@"%@",phoneNo);
//            [appDelegateObj.phoneBkDict setObject:phoneNo forKey:(NSString*)ABRecordCopyCompositeName(person)];
//        }
//        
//        emails = [[NSMutableDictionary alloc] init];
//        
//        ABMutableMultiValueRef emailMulti = ABRecordCopyValue(person, kABPersonEmailProperty);
//        emails = [[NSMutableArray alloc] init];
//        
//        CFIndex numEmail = ABMultiValueGetCount(emailMulti);
//        
//        for (int k = 0; k<numEmail; k++) {
//            NSString *anEmail = [(NSString*)ABMultiValueCopyValueAtIndex(emailMulti, k) autorelease];
//            NSLog(@"%@",anEmail);
//            [emails addObject:anEmail];
//            NSLog(@"%@",emails);
//            [appDelegateObj.EmailDict setObject:emails forKey:(NSString*)ABRecordCopyCompositeName(person)];
//        }
//        // NSLog(@"%@",emails);
//        //         for(int k=0;k<[emails count];k++){
//        //         NSLog(@"email at index %d is %@",k,[emails objectAtIndex:k]);
//        //         }
//        // [dict setObject:emails forKey:@"Email"];
//        //  NSLog(@"Dictionary Contains%@",dict);
//        
//        
//        CFRelease(emailMulti);
//        [emails release];
//        [phoneNo release];
//        CFRelease(phonelist);
//        
//        //        CFDataRef imageData = ABPersonCopyImageData(person);
//        //        UIImage *image = [UIImage imageWithData:(NSData *)imageData];
//        //        CFRelease(imageData);
//        
//        [PhoneBookArray addObject:(NSString*)ABRecordCopyCompositeName(person)];
//    }
//    NSLog(@"%@",appDelegateObj.phoneBkDict);
//    NSLog(@"%@",PhoneBookArray);
//    CFRelease(allPeople);
//    CFRelease(addressbook);
//
    Name = [[NSMutableArray alloc] init];
    
    
    [mysegment setImage:[UIImage imageNamed:@"GMConSel.png"]forSegmentAtIndex:0];
    [mysegment setImage:[UIImage imageNamed:@"Phone.png"]forSegmentAtIndex:1];
    
    //[phoneArray2 addObjectsFromArray:appDelegateObj.PhoneBookArray];
    
    searchbar.tag = 1;
    
    [AlertHandler showAlertForProcess];
    
    NSString *urlString = [NSString stringWithFormat:@"http://www.openxcellaus.info/glueme/user_list.php?user_id=%d",appDelegateObj.userID];
    
    
    
    NSLog(@"%@",urlString);
    
    NSMutableURLRequest *request=[NSMutableURLRequest requestWithURL:[NSURL URLWithString:urlString]];
    
    JSONParser *parser;
    parser= [[JSONParser alloc] initWithRequestForThread:request sel:@selector(datafatch:) andHandler:self];
    
    //[appDelegateObj getContacts];

}

-(void)searchwithKeyWord:(UISearchBar*)SearchB{
	
    
	if (SearchB.tag == 1) {
		
		
		[Name removeAllObjects];
		NSDictionary *dic1;
		//NSString *dic;
		for(dic1 in contactname)
		{
			NSString *st =	[dic1 copy];
			
			NSRange rang =[st rangeOfString:SearchB.text options:NSCaseInsensitiveSearch];
			
			
			if (rang.length == [SearchB.text length]) {
				[Name addObject:dic1];
			}else {
				[Name removeObject:dic1];
			}
		}
		[gluemecontacttbl reloadData];
		
	}
	if (SearchB.tag == 2) {
		
		[phoneArray2 removeAllObjects];
		NSDictionary *dic2;
		//NSString *dic;
		for(dic2 in phnArray)
		{
			NSString *st =	[dic2 copy];
			
			NSRange rang =[st rangeOfString:SearchB.text options:NSCaseInsensitiveSearch];
			
			
			if (rang.length == [SearchB.text length]) {
				[phoneArray2 addObject:dic2];
			}else {
				[phoneArray2 removeObject:dic2];
			}
		}
//        if ([phoneArray2 count] >0) {
            [phncontacttbl reloadData];
//        }
		
		
	}
        
	
}


-(BOOL)searchBarShouldBeginEditing:(UISearchBar *)searchBar{
	[searchBar setShowsCancelButton:YES animated:YES];
	searchBar.showsCancelButton=YES;
	return YES;
}
-(BOOL)searchBar:(UISearchBar *)searchBar shouldChangeTextInRange:(NSRange)range replacementText:(NSString *)text{
	
    [self performSelector:@selector(searchwithKeyWord:) withObject:searchBar afterDelay:0.2];
	
	return YES;
}
-(void)searchBarSearchButtonClicked:(UISearchBar *)searchBar{
	[searchBar setShowsCancelButton:NO animated:YES];
	[searchBar resignFirstResponder];
	
}
-(void)searchBarCancelButtonClicked:(UISearchBar *)searchBar{
	[searchBar resignFirstResponder];
	[searchBar setShowsCancelButton:NO animated:YES];
}
-(BOOL)searchBarShouldEndEditing:(UISearchBar *)searchBar{
	
	[self searchwithKeyWord:searchBar];
	return YES;
}



-(IBAction)segmentedControlIndexChanged
{
    UIImageView *tableImg = [[UIImageView alloc] initWithFrame:CGRectMake(0, 80, 309, 248)];
    [tableImg setImage:[UIImage imageNamed:@"tblBackGround.png"]];
    
	switch(mysegment.selectedSegmentIndex) 
	{
		case 0:
			gluemecontacttbl.hidden = FALSE;
			phncontacttbl.hidden = TRUE;
			//[AlertHandler showAlertForProcess];
            
            [mysegment setImage:[UIImage imageNamed:@"GMConSel.png"]forSegmentAtIndex:0];
            [mysegment setImage:[UIImage imageNamed:@"Phone.png"]forSegmentAtIndex:1];
            searchbar.tag = 1;
			[gluemecontacttbl reloadData];
            
            
            //  [gluemecontacttbl setBackgroundView:tableImg];
			
			//[SEGCntrlContacts setImage:[UIImage imageNamed:@"contactsB.png"] forSegmentAtIndex:0];
			//			[SEGCntrlContacts setImage:[UIImage imageNamed:@"inviteW.png"] forSegmentAtIndex:1];
			//			[SEGCntrlContacts setImage:[UIImage imageNamed:@"StatusW.png"]forSegmentAtIndex:2];
			
			
			break;
		case 1:
            
            
			gluemecontacttbl.hidden=TRUE;
			phncontacttbl.hidden=FALSE;
			
            [mysegment setImage:[UIImage imageNamed:@"GMCon.png"]forSegmentAtIndex:0];
            [mysegment setImage:[UIImage imageNamed:@"PhoneSel.png"]forSegmentAtIndex:1];
            searchbar.tag = 2;
			//[phncontacttbl setBackgroundView:tableImg];
			[phncontacttbl reloadData];
			
			//[SEGCntrlContacts setImage:[UIImage imageNamed:@"contactsW.png"] forSegmentAtIndex:0];
			//			[SEGCntrlContacts setImage:[UIImage imageNamed:@"inviteB.png"] forSegmentAtIndex:1];
			//			[SEGCntrlContacts setImage:[UIImage imageNamed:@"StatusW.png"]forSegmentAtIndex:2];
			break;
	}
}



-(void)datafatch:(NSDictionary*)dictionary{
    
    [AlertHandler hideAlert];
    
    contactArray=[[NSMutableArray alloc]init];
    contactnum=[[NSMutableArray alloc]init];
    contactname=[[NSMutableArray alloc]init];
    contactemail=[[NSMutableArray alloc] init];
    lnamearray=[[NSMutableArray alloc]init];
    bdate=[[NSMutableArray alloc] init];
    
    for (int i=0; i<[[dictionary valueForKey:@"Record"]count]; i++) 
    {
        [contactArray addObject:[[[dictionary valueForKey:@"Record"] valueForKey:@"uid"] objectAtIndex:i]];
        [contactname addObject:[[[dictionary valueForKey:@"Record"] valueForKey:@"firstname"] objectAtIndex:i]];
        
        [contactnum addObject:[[[dictionary valueForKey:@"Record"] valueForKey:@"phone"] objectAtIndex:i]];
        
        [contactemail addObject:[[[dictionary valueForKey:@"Record"] valueForKey:@"email"] objectAtIndex:i]];
        
        [lnamearray addObject:[[[dictionary valueForKey:@"Record"] valueForKey:@"lastname"] objectAtIndex:i]];
        
        [bdate addObject:[[[dictionary valueForKey:@"Record"] valueForKey:@"bday"] objectAtIndex:i]];
        
        
    }
    
    [Name addObjectsFromArray:contactname];
    
    [gluemecontacttbl reloadData];
    
}

-(IBAction)onMap:(id)sender{
	
	whoGlueObj = [[WhoGlueViewController alloc] initWithNibName:@"WhoGlueViewController" bundle:nil];
    appDelegateObj.count = 0;
	//whogluedmap	*gluemap=[[whogluedmap alloc]initWithNibName:@"whogluedmap" bundle:nil];
	[self.navigationController pushViewController:whoGlueObj animated:YES];
	//[gluemap release];
	
	
}

-(IBAction)setmeeting
{
    listVwObj = [[listwhoglued alloc] initWithNibName:@"listwhoglued" bundle:nil];
    [self.navigationController pushViewController:listVwObj animated:NO];
}

-(IBAction)onFAQ:(id)sender
{
	FAQHelp *faqhelp=[[FAQHelp alloc]initWithNibName:@"FAQHelp" bundle:nil];
	[self.navigationController pushViewController:faqhelp animated:YES];
	[faqhelp release];
}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{ 
    if (tableView == gluemecontacttbl) {
        objglue = [[GetGlueViewController alloc] initWithNibName:@"GetGlueViewController" bundle:nil];
        appDelegateObj.contactemail=[contactemail objectAtIndex:indexPath.row];
        appDelegateObj.strid=[contactArray objectAtIndex:indexPath.row];
        
        appDelegateObj.contactname=[contactname objectAtIndex:indexPath.row];
        appDelegateObj.lname=[lnamearray objectAtIndex:indexPath.row];
        
        appDelegateObj.bdateStr=[bdate objectAtIndex:indexPath.row];
        
        
        appDelegateObj.contactnum=[contactnum objectAtIndex:indexPath.row];
        
        [self.navigationController pushViewController:objglue animated:YES];
    }
    
}
-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    if (tableView == gluemecontacttbl) {
         return [Name count];
    }
    if (tableView == phncontacttbl) {
        return [phoneArray2 count];
    }

   
}
-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}
-(UITableViewCell*)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    
    static NSString *CellIdentifier = @"Cell";
    
    UIImageView *cellImg = [[UIImageView alloc] initWithFrame:CGRectMake(0,10,270, 57)];
    [cellImg setImage:[UIImage imageNamed:@"CellImg"]];
    
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
    
    if (cell == nil) {
        cell = [[[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:CellIdentifier] autorelease];
        [cell.contentView addSubview:cellImg];

    }
    // cell.textLabel.text = [PhoneBookArray objectAtIndex:indexPath.row];
    
//    UIImageView *cellImg = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, 295, 44)];
//    [cellImg setImage:[UIImage imageNamed:@"contactCellImg.png"]];
//    cell.backgroundView = cellImg;
    [cell setSelectionStyle:UITableViewCellSelectionStyleNone];
    
    if (tableView == gluemecontacttbl) {
        cell.textLabel.text = [Name objectAtIndex:indexPath.row];
    }
    else
    {
        cell.textLabel.font = [UIFont fontWithName:@"arial" size:18];
		//cell.textLabel.textColor=[UIColor whiteColor];
		cell.textLabel.text = [phoneArray2 objectAtIndex:indexPath.row];
		//cell.detailTextLabel.text= @"-downtown";
		//cell.detailTextLabel.textColor = [UIColor whiteColor];
		//cell.contentView.backgroundColor=[UIColor clearColor];
		cell.textLabel.backgroundColor=[UIColor clearColor];
        
        //phncontacttbl.frame=CGRectMake(20, 155, 280, [appDelegateObj.PhoneBookArray count]*44);
        cell.textLabel.textColor = [UIColor blackColor];
    }
    
    
    return cell;
    
}

- (void)viewDidUnload
{
    [super viewDidUnload];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    // Return YES for supported orientations
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}

@end
