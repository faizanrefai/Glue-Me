//
//  AcceptRequest.m
//  glueme
//
//  Created by APPLE  on 9/20/11.
//  Copyright 2011 openxcel. All rights reserved.
//

#import "AcceptRequest.h"
#import "whogluedmap.h"
#import "FAQHelp.h"

@implementation AcceptRequest
@synthesize durationArray;


- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

-(IBAction)OnTimeSelected
{
    
    /*
    actionsheet = [[UIActionSheet alloc] initWithTitle:nil delegate:self cancelButtonTitle:@"Done" destructiveButtonTitle:nil otherButtonTitles:nil];	
    // Add the picker
    pickerView = [[UIPickerView alloc]initWithFrame:CGRectMake(0,65,0,0)];
    pickerView.delegate = self;
    [pickerView setShowsSelectionIndicator:YES];
    pickerView.userInteractionEnabled = TRUE;
//    pickerView.datePickerMode = UIDatePickerModeDate;
    //self.pickerView = pickerView;
    [actionsheet addSubview:pickerView];
    [actionsheet showInView:self.view];
    [actionsheet setBounds:CGRectMake(0,0,320, 450)];	
    [pickerView release];
    [actionsheet release];		
    */
    
    
    
    if (!actionSheetCBrand) {
        
        actionSheetCBrand = [[UIActionSheet alloc] initWithTitle:nil delegate:nil cancelButtonTitle:nil destructiveButtonTitle:nil otherButtonTitles:nil];
        [actionSheetCBrand setActionSheetStyle:UIActionSheetStyleBlackTranslucent];
        
        CGRect pickerFrame;
        
        if (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPad)
            pickerFrame = CGRectMake(0, 40, 768, 300);
        else
            pickerFrame = CGRectMake(0, 40, 320, 200);
        
        pickerViewCBrand = [[UIPickerView alloc] initWithFrame:pickerFrame];
        pickerViewCBrand.showsSelectionIndicator = YES;
        pickerViewCBrand.userInteractionEnabled = TRUE;
        pickerViewCBrand.dataSource = self;
        pickerViewCBrand.delegate = self;
        [actionSheetCBrand addSubview:pickerViewCBrand];
        
        UISegmentedControl *closeButton = [[UISegmentedControl alloc] initWithItems:[NSArray arrayWithObject:@"Close"]];
        closeButton.momentary = YES; 
        
        if (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPad)
            closeButton.frame = CGRectMake(700, 7.0f, 50.0f, 30.0f);
        else 
            closeButton.frame = CGRectMake(260, 7.0f, 50.0f, 30.0f);
        
        
        closeButton.segmentedControlStyle = UISegmentedControlStyleBar;
        closeButton.tintColor = [UIColor blackColor];
        [closeButton addTarget:self action:@selector(dismissActionSheet) forControlEvents:UIControlEventValueChanged];
        [actionSheetCBrand addSubview:closeButton];
        [closeButton release];
        
        
        CGRect frame;
        
        if (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPad)
            frame = CGRectMake(self.view.frame.origin.x, 630, 768.0f,350.0f);
        else
            frame = CGRectMake(self.view.frame.origin.x, 160, 480.0f,300.0f);
        
        [actionSheetCBrand setFrame:frame]; 
        [self.view addSubview:actionSheetCBrand];
        
                
    }

    

}
-(IBAction)onMap:(id)sender{
	
    whoGlueVwObj = [[WhoGlueViewController alloc] initWithNibName:@"WhoGlueViewController" bundle:nil];

	appDelegateObj.count = 0;
	//whogluedmap	*gluemap=[[whogluedmap alloc]initWithNibName:@"whogluedmap" bundle:nil];
	[self.navigationController pushViewController:whoGlueVwObj animated:YES];
//	[gluemap release];
	
	
}

-(IBAction)setmeeting
{
    listVwObj = [[listwhoglued alloc] initWithNibName:@"listwhoglued" bundle:nil];
    [self.navigationController pushViewController:listVwObj animated:NO];
}

-(void)dismissActionSheet
{
        
    actionSheetCBrand.hidden = TRUE;
    
    [actionSheetCBrand release];
    actionSheetCBrand=nil;
    
}

-(IBAction)ClickOnGlueMe
{
    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"Info" message:@"You Glued" delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
    [alert show];
    [alert release];

}

-(IBAction)ClickOnGlueMeLater
{
    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"Info" message:@"You Will be reminded for glue later" delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
    [alert show];
    [alert release];
    
    
}


- (NSInteger)numberOfComponentsInPickerView:(UIPickerView *)pickerView;
{
    return 1;
}

- (void)pickerView:(UIPickerView *)pickerView didSelectRow:(NSInteger)row inComponent:(NSInteger)component
{
    [durationBtn setTitle:[durationArray objectAtIndex:row] forState:normal];
    
}

- (NSInteger)pickerView:(UIPickerView *)pickerView numberOfRowsInComponent:(NSInteger)component;
{
    return [durationArray count];
}

- (NSString *)pickerView:(UIPickerView *)pickerView titleForRow:(NSInteger)row forComponent:(NSInteger)component;
{
    return [durationArray objectAtIndex:row];
}

- (void)dealloc
{
    [durationArray release];
    [super dealloc];
}

- (void)didReceiveMemoryWarning
{
    // Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
    
    // Release any cached data, images, etc that aren't in use.
}

#pragma mark - View lifecycle

- (void)viewDidLoad
{
    self.navigationController.navigationBar.alpha = 0.0;
    
    self.navigationController.navigationBar.tintColor = [UIColor clearColor];
    UIImageView *topbarImg = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, 320, 46)];
    [topbarImg setImage:[UIImage imageNamed:@"Group9.png"]];
    
    [self.view addSubview:topbarImg];
    
    UIButton *backBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    backBtn.frame = CGRectMake(5,10, 76, 28);
    
    [backBtn addTarget:self action:@selector(Back) forControlEvents:UIControlEventTouchUpInside];
    
    UIButton *BumpBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    BumpBtn.frame = CGRectMake(268,10, 35, 34);
    
    [BumpBtn addTarget:self action:@selector(Bump) forControlEvents:UIControlEventTouchUpInside];
    
    [self.view addSubview:BumpBtn]; 
    
    [self.view addSubview:backBtn]; 
    
    appDelegateObj = (gluemeAppDelegate *)[[UIApplication sharedApplication]delegate];
    
    durationArray = [[NSMutableArray alloc] init];
    [durationArray addObject:@"Forever"];
    [durationArray addObject:@"48 hours"];
    [durationArray addObject:@"24 hours"];
    [durationArray addObject:@"12 hours"];
    [durationArray addObject:@"6 hours"];
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
}

-(void)Back
{
    [self.navigationController popViewControllerAnimated:YES];
}

-(void)Bump
{
    NSLog(@"BumpClicked");
    bumpObj = [[Bump alloc] initWithNibName:@"Bump" bundle:nil];
    [self.navigationController pushViewController:bumpObj animated:YES];
    
}

-(void)viewWillAppear:(BOOL)animated
{
    
}

-(IBAction)onFAQ:(id)sender
{
	FAQHelp *faqhelp=[[FAQHelp alloc]initWithNibName:@"FAQHelp" bundle:nil];
	[self.navigationController pushViewController:faqhelp animated:YES];
	[faqhelp release];
}

- (void)viewDidUnload
{
    [super viewDidUnload];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    // Return YES for supported orientations
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}

@end
