//
//  meetingpointview.m
//  glueme
//
//  Created by apple on 9/21/11.
//  Copyright 2011 fgbfg. All rights reserved.
//

#import "meetingpointview.h"
#import "whogluedmap.h"
#import "FAQHelp.h"

@implementation meetingpointview

// The designated initializer.  Override if you create the controller programmatically and want to perform customization that is not appropriate for viewDidLoad.
/*
- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil {
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization.
    }
    return self;
}
*/
-(IBAction)setmeeting
{
    listVwObj = [[listwhoglued alloc] initWithNibName:@"listwhoglued" bundle:nil];
    [self.navigationController pushViewController:listVwObj animated:NO];
}

-(IBAction)onMap:(id)sender{
	
	//[self.navigationController popViewControllerAnimated:YES];
	whoGlueVwObj = [[WhoGlueViewController alloc] initWithNibName:@"WhoGlueViewController" bundle:nil];
    appDelegateObj.count = 0;
    [self.navigationController pushViewController:whoGlueVwObj animated:NO];
	
}

-(IBAction)onFAQ:(id)sender
{
	FAQHelp *faqhelp=[[FAQHelp alloc]initWithNibName:@"FAQHelp" bundle:nil];
	[self.navigationController pushViewController:faqhelp animated:YES];
	[faqhelp release];
}


// Implement viewDidLoad to do additional setup after loading the view, typically from a nib.
- (void)viewDidLoad {
    [super viewDidLoad];
	
    self.navigationController.navigationBar.alpha = 0.0;
    
    self.navigationController.navigationBar.tintColor = [UIColor clearColor];
    UIImageView *topbarImg = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, 320, 46)];
    [topbarImg setImage:[UIImage imageNamed:@"Group9.png"]];
    
    [self.view addSubview:topbarImg];
    
    UIButton *backBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    backBtn.frame = CGRectMake(5,10, 76, 28);
    
    [backBtn addTarget:self action:@selector(Back) forControlEvents:UIControlEventTouchUpInside];
    
    UIButton *BumpBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    BumpBtn.frame = CGRectMake(268,10, 35, 34);
    
    [BumpBtn addTarget:self action:@selector(Bump) forControlEvents:UIControlEventTouchUpInside];
    
    [self.view addSubview:BumpBtn]; 
    
    [self.view addSubview:backBtn];    
    
    appDelegateObj = (gluemeAppDelegate*)[[UIApplication sharedApplication]delegate];
    
	tabelarr = [[NSMutableArray alloc]init];
	DetailArray = [[NSMutableArray alloc]init];
	
//	[tabelarr addObject:@"Cafe Inn"];
//	[tabelarr addObject:@"Cafe Inns"];
//	[tabelarr addObject:@"Cafe Rio"];
//	[DetailArray addObject:@"-Downtown"];
//	[DetailArray addObject:@"-Street Way"];
//	[DetailArray addObject:@"-Chicago"];
	//[tabelarr addObject:@"nepal"];
	
	
}

-(void)Bump
{
    NSLog(@"BumpClicked");
    bumpObj = [[Bump alloc] initWithNibName:@"Bump" bundle:nil];
    [self.navigationController pushViewController:bumpObj animated:YES];
    
}



-(void)viewWillAppear:(BOOL)animated
{
    
    
    tbl.rowHeight = 70.0;
    
    searchbar.tintColor = [UIColor whiteColor];

    [AlertHandler showAlertForProcess];
    locationManager = [[CLLocationManager alloc]init];
    
    
    NSString *deviceType = [UIDevice currentDevice].model;
    
    
	if([deviceType isEqualToString:@"iPod touch"]||[deviceType isEqualToString:@"iPhone"]||[deviceType isEqualToString:@"iPad"]){
        
        if([CLLocationManager locationServicesEnabled])
        {
            locationManager.delegate = self;
            locationManager.desiredAccuracy  = kCLLocationAccuracyKilometer;
            locationManager.distanceFilter = 1000.0f;
            [locationManager startUpdatingLocation];
            
            //	appDelegateObj.latitude= [[NSString alloc]initWithFormat:@"%g",locationManager.];
            //appDelegateObj.longitude = [[NSString alloc]initWithFormat:@"%g",locationManager.longitude];
            
        }
    }
    else{
          
  
        NSString *urlString = [NSString stringWithFormat:@"https://maps.googleapis.com/maps/api/place/search/json?location=23.062100,72.553300&radius=8046.72&sensor=false&key=AIzaSyAnToGW2ITMg8nIvMjDjkjYO-_1TVDdt_g"];
    
    
    NSLog(@"%@",urlString);
    
    NSMutableURLRequest *request=[NSMutableURLRequest requestWithURL:[NSURL URLWithString:urlString]];
    
    JSONParser *parser;
    parser= [[JSONParser alloc] initWithRequestForThread:request sel:@selector(datafatch:) andHandler:self];
    }
    
   
    
         
    
//    UIImageView *tblImg = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, 320, 46)];
//    [tblImg setImage:[UIImage imageNamed:@"tblBg.png"]];
//    
   // [tbl setBackgroundView:tblImg];
}
- (void)locationManager:(CLLocationManager *)manager didUpdateToLocation:(CLLocation *)newLocation fromLocation:(CLLocation *)oldLocation {
	NSString *strlat;
    NSString *strlong;
    NSString *deviceType = [UIDevice currentDevice].model;
    
    
	if([deviceType isEqualToString:@"iPod touch"]||[deviceType isEqualToString:@"iPhone"]||[deviceType isEqualToString:@"iPad"]){
        
    strlat= [[NSString alloc]initWithFormat:@"%g",newLocation.coordinate.latitude];
	strlong = [[NSString alloc]initWithFormat:@"%g",newLocation.coordinate.longitude];
    }
    else{
    
        strlat= @"23.062100";
        strlong = @"72.553300";

    }
    NSString *urlString = [NSString stringWithFormat:@"https://maps.googleapis.com/maps/api/place/search/json?location=%@,%@&radius=8046.72&sensor=false&key=AIzaSyAnToGW2ITMg8nIvMjDjkjYO-_1TVDdt_g",strlat,strlong];
    
    
    NSLog(@"%@",urlString);
    
    NSMutableURLRequest *request=[NSMutableURLRequest requestWithURL:[NSURL URLWithString:urlString]];
    
    JSONParser *parser;
    parser= [[JSONParser alloc] initWithRequestForThread:request sel:@selector(datafatch:) andHandler:self];
    

    
    
}
-(void)datafatch:(NSDictionary*)dictionary{
    
    [AlertHandler hideAlert];
    
    resultArray =[[NSMutableArray alloc]init];
   
    NSLog(@"Dictionary Data :: %@",dictionary);
    
    for (int i=0; i<[[dictionary valueForKey:@"results"]count]; i++) 
    {
        
         NSMutableDictionary *tempDic = [[NSMutableDictionary alloc] init];
       
         [tempDic setValue:[[[[[dictionary valueForKey:@"results"] valueForKey:@"geometry"] valueForKey:@"location"] valueForKey:@"lat"] objectAtIndex:i] forKey:@"placeLat"];
        
        [tempDic setValue:[[[[[dictionary valueForKey:@"results"] valueForKey:@"geometry"] valueForKey:@"location"] valueForKey:@"lng"] objectAtIndex:i] forKey:@"placeLng"];
        
        [tempDic setValue:[[[dictionary valueForKey:@"results"] valueForKey:@"name"] objectAtIndex:i] forKey:@"placeName"];

        [tabelarr addObject:[NSString stringWithFormat:@"%@",[tempDic valueForKey:@"placeName"]]];
        
        [tempDic setValue:[[[dictionary valueForKey:@"results"] valueForKey:@"vicinity"] objectAtIndex:i] forKey:@"placeVicinity"];

        [resultArray addObject:tempDic];
        
//        [tempDic release];
    }
//    [gluemecontacttbl reloadData];
    
    
    
    NSLog(@"%@",tabelarr);
if([tabelarr count]<1)
{

    UIAlertView *alert1=[[UIAlertView alloc]initWithTitle:@"No data Found" message:@"No Cafe Available" delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
    [alert1 show];
    [alert1 release];
    
}
else    {
    
    searcharr=[[NSMutableArray alloc] initWithArray:tabelarr];

    [tbl reloadData];
}
}

-(void)Back
{
    [self.navigationController popViewControllerAnimated:YES];
}


/*
// Override to allow orientations other than the default portrait orientation.
- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation {
    // Return YES for supported orientations.
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}
*/

-(void)searchwithKeyWord:(UISearchBar*)SearchB{
	
	if (SearchB == searchbar) {
		
		
		[searcharr removeAllObjects];
		NSDictionary *dic;
		//NSString *dic;
		for(dic in tabelarr)
		{
			NSString *st =	[dic copy];
			
			NSRange rang =[st rangeOfString:SearchB.text options:NSCaseInsensitiveSearch];
			
			if (rang.length == [SearchB.text length]) {
				[searcharr addObject:dic];
			}else {
				[searcharr removeObject:dic];
			}
		}
		[tbl reloadData];
		
    }
	
	
}


-(BOOL)searchBarShouldBeginEditing:(UISearchBar *)searchBar{
	[searchBar setShowsCancelButton:YES animated:YES];
	searchBar.showsCancelButton=YES;
	return YES;
}
-(BOOL)searchBar:(UISearchBar *)searchBar shouldChangeTextInRange:(NSRange)range replacementText:(NSString *)text{
	
[self performSelector:@selector(searchwithKeyWord:) withObject:searchBar afterDelay:0.2];
	
	return YES;
}
-(void)searchBarSearchButtonClicked:(UISearchBar *)searchBar{
	[searchBar setShowsCancelButton:NO animated:YES];
	[searchBar resignFirstResponder];
	
}
-(void)searchBarCancelButtonClicked:(UISearchBar *)searchBar{
	[searchBar resignFirstResponder];
	[searchBar setShowsCancelButton:NO animated:YES];
}
-(BOOL)searchBarShouldEndEditing:(UISearchBar *)searchBar{
	
	[self searchwithKeyWord:searchBar];
	return YES;
}


- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView 
{
    return 1;
}


// Customize the number of rows in the table view.
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section 
{
	//return [searcharr count];
    
    return [searcharr count];
}


// Customize the appearance of table view cells.
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath 
{
    
    UIImageView *cellImg = [[UIImageView alloc] initWithFrame:CGRectMake(0,10,270, 57)];
    [cellImg setImage:[UIImage imageNamed:@"CellImg"]];
    
    static NSString *CellIdentifier = @"Cell";
    
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
    if (cell == nil) {
        cell = [[[UITableViewCell alloc] initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:CellIdentifier] autorelease];
        [cell.contentView addSubview:cellImg];
    }
    
    cell.selectionStyle = UITableViewCellEditingStyleNone;
    
	cell.textLabel.font = [UIFont fontWithName:@"arial" size:12];
    cell.detailTextLabel.font = [UIFont fontWithName:@"arial" size:10];
	//cell.textLabel.textColor=[UIColor whiteColor];
  
    NSMutableDictionary *tempDic = [resultArray objectAtIndex:indexPath.row];
    cell.textLabel.text = [searcharr objectAtIndex:indexPath.row];
    //cell.textLabel.text = [NSString stringWithFormat:@"%@",[tempDic valueForKey:@"placeName"]];
    cell.detailTextLabel.text= [NSString stringWithFormat:@"%@",[tempDic valueForKey:@"placeVicinity"]];
//	cell.textLabel.text = [searcharr objectAtIndex:indexPath.row];
//	cell.detailTextLabel.text= [DetailArray objectAtIndex:indexPath.row];
	//cell.detailTextLabel.textColor = [UIColor whiteColor];
	//cell.contentView.backgroundColor=[UIColor clearColor];
	cell.textLabel.backgroundColor=[UIColor clearColor];
	cell.detailTextLabel.backgroundColor=[UIColor clearColor];
    
//    UIImageView *cellImg1 = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, 320, 44)];
//    [cellImg1 setImage:[UIImage imageNamed:@"contactCellImg.png"]];
//    cell.backgroundView = cellImg1;
//    
//    cell.textLabel.textColor = [UIColor blackColor];
	
    return cell;
}


- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath 
{
	meetingpointdetail *obj = [[meetingpointdetail alloc]init];
    
    NSMutableDictionary *tempDic = [resultArray objectAtIndex:indexPath.row];
    
    appDelegateObj.placeString = [NSString stringWithFormat:@"%@",[tempDic valueForKey:@"placeName"]];
    
	[self.navigationController pushViewController:obj animated:YES];
}


- (void)didReceiveMemoryWarning {
    // Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
    
    // Release any cached data, images, etc. that aren't in use.
}

- (void)viewDidUnload {
    [super viewDidUnload];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
}


- (void)dealloc {
    [super dealloc];
}


@end
